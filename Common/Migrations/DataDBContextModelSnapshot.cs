// <auto-generated />
using System;
using Common;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Common.Migrations
{
    [DbContext(typeof(DataDBContext))]
    partial class DataDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entity.Common.Logger", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Account")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Account");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("Description");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("IPAddress");

                    b.Property<string>("IPAddressName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("IPAddressName");

                    b.Property<string>("LogType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LogType");

                    b.Property<string>("RealName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("RealName");

                    b.Property<bool>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("bit")
                        .HasColumnName("Status");

                    b.HasKey("ID");

                    b.ToTable("Logger");
                });

            modelBuilder.Entity("Entity.Manage.Manager", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<string>("Email")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Email");

                    b.Property<string>("ManagerAccount")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ManagerAccount");

                    b.Property<string>("ManagerPwd")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ManagerPwd");

                    b.Property<int>("OrderBy")
                        .HasColumnType("int")
                        .HasColumnName("OrderBy");

                    b.Property<string>("RealName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("RealName");

                    b.Property<string>("Remark")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("Remark");

                    b.Property<string>("RevisedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("RevisedBy");

                    b.Property<DateTime?>("RevisedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("RevisedTime");

                    b.Property<int>("RoleID")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("Status");

                    b.Property<string>("Telephone")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("Telephone");

                    b.HasKey("ID");

                    b.HasIndex("RoleID");

                    b.ToTable("Manager");
                });

            modelBuilder.Entity("Entity.Manage.Module", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModuleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ModuleName");

                    b.Property<int>("OrderBy")
                        .HasColumnType("int");

                    b.Property<int>("ParentID")
                        .HasColumnType("int")
                        .HasColumnName("ParentID");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Path");

                    b.Property<string>("RevisedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RevisedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Url");

                    b.HasKey("ID");

                    b.ToTable("Module");
                });

            modelBuilder.Entity("Entity.Manage.Role", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Description");

                    b.Property<int>("OrderBy")
                        .HasColumnType("int")
                        .HasColumnName("OrderBy");

                    b.Property<string>("RevisedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("RevisedBy");

                    b.Property<DateTime?>("RevisedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("RevisedTime");

                    b.Property<string>("RoleName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("RoleName");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("Status");

                    b.HasKey("ID");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Entity.Manage.RoleToModule", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Flag")
                        .HasColumnType("bit")
                        .HasColumnName("Flag");

                    b.Property<int>("MenuID")
                        .HasColumnType("int")
                        .HasColumnName("MenuID");

                    b.Property<int>("RoleID")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.HasKey("ID");

                    b.HasIndex("RoleID");

                    b.ToTable("RoleToModule");
                });

            modelBuilder.Entity("Entity.Manage.Manager", b =>
                {
                    b.HasOne("Entity.Manage.Role", "Role")
                        .WithMany("Managers")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Entity.Manage.RoleToModule", b =>
                {
                    b.HasOne("Entity.Manage.Role", "Role")
                        .WithMany("RoleToModules")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Entity.Manage.Role", b =>
                {
                    b.Navigation("Managers");

                    b.Navigation("RoleToModules");
                });
#pragma warning restore 612, 618
        }
    }
}
